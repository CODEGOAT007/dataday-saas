name: Ultra-Fast Vercel Deployment

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit --no-fund
    
    - name: Build Project Artifacts
      run: vercel build ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
    
    - name: Deploy Project Artifacts to Vercel
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        else
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        fi
    
    - name: Comment PR with Preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          try {
            const url = execSync('vercel ls --token=${{ secrets.VERCEL_TOKEN }} | head -1 | awk "{print $2}"', { encoding: 'utf8' }).trim();
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment ready!\n\nâœ… Preview: ${url}`
            });
          } catch (error) {
            console.log('Could not get preview URL:', error.message);
          }
